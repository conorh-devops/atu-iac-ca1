Description: This template is for the VPC deployment and will include all resources related to the VPC including subnets and internet gateways spread across availability zones.

Parameters:
  SSHKeyName:
    Description: SSH KeyPair name for EC2 instances
    Type: String
    Default: cfa-sshkey

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties: 
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags: 
         - Key: stack
           Value: production
  
  IGW:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: stack
          Value: production
  
  VPCGWAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref IGW
      VpcId: !Ref VPC
  
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.10.0/24
      AvailabilityZone: "eu-west-1a"

  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.20.0/24
      AvailabilityZone: "eu-west-1a"
  
  NATGateway1:
   Type: AWS::EC2::NatGateway
   Properties:
      AllocationId: !GetAtt NATGatewayEIP1.AllocationId
      SubnetId: !Ref PublicSubnet1

  NATGatewayEIP1:
   Type: AWS::EC2::EIP
   Properties:
      Domain: vpc

  PublicRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC

  PublicRoute1:
    Type: AWS::EC2::Route
    DependsOn: IGW
    Properties:
        RouteTableId: !Ref PublicRouteTable1
        DestinationCidrBlock: 0.0.0.0/0
        GatewayId: !Ref IGW

  PublicSubnetRouteTableAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicRouteTable1

# Security Groups and Instances
  JumpBoxSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security Group for jumpbox (ssh access from all IPs).
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          FromPort: 22
          IpProtocol: tcp
          ToPort: 22
      SecurityGroupEgress:
        - CidrIp: 10.0.0.0/16
          FromPort: 22
          IpProtocol: tcp
          ToPort: 22
      VpcId: !Ref VPC
      Tags:
        - Key: stack
          Value: production

  JumpBox:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-0ee415e1b8b71305f
      KeyName: !Ref SSHKeyName #Needed to authenticate onto this EC2 instance via SSH
      InstanceType: t2.micro
      NetworkInterfaces:
        - DeviceIndex: '0'
          SubnetId: !Ref PublicSubnet1
          AssociatePublicIpAddress: true #ensure it has an public facing IP Address
          GroupSet: [ !Ref JumpBoxSecurityGroup ]
      Tags:
        - Key: stack
          Value: production

  BackendSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security Group for backend app (private only internal access and outbound internet on HTTPS and HTTP).
      SecurityGroupIngress:
        - SourceSecurityGroupId: !Ref JumpBoxSecurityGroup
          FromPort: 22
          IpProtocol: tcp
          ToPort: 22
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0 #HTTP
          FromPort: 80
          IpProtocol: tcp
          ToPort: 80
        - CidrIp: 0.0.0.0/0 #HTTPS
          FromPort: 443
          IpProtocol: tcp
          ToPort: 443
      VpcId: !Ref VPC
      Tags:
        - Key: stack
          Value: production

  Backend:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-0ee415e1b8b71305f
      KeyName: !Ref SSHKeyName #Needed to authenticate onto this EC2 instance via SSH
      InstanceType: t2.micro
      NetworkInterfaces:
        - DeviceIndex: '0'
          SubnetId: !Ref PublicSubnet1
          AssociatePublicIpAddress: false #ensure it has an public facing IP Address
          GroupSet: [ !Ref BackendSecurityGroup ]
      Tags:
        - Key: stack
          Value: production